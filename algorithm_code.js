var insertionc = '<b class="blue">void</b> insertionSort(<b class="grey">int</b> arr[], <b class="grey">int</b> n)<br/>{<br/>&nbsp;&nbsp;<b class="grey">int</b> i, key, j;<br/>&nbsp;&nbsp;<b class="blue">for</b> (i = 1; i &lt; n; i++) {<br/><div class="cr sel">&nbsp;&nbsp;&nbsp;&nbsp;key = arr[i];</div>&nbsp;&nbsp;&nbsp;&nbsp;j = i - 1;<br/><br/><div class="cr whl">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">while</b> (j &gt;= 0 && arr[j] &gt; key) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j + 1] = arr[j];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j - 1;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}</div>&nbsp;&nbsp;&nbsp;&nbsp;arr[j = 1] = key;<br/>&nbsp;&nbsp;}<br/>}';
var insertionjava = '<b class="blue">void</b> insertionSort(<b class="blue">int</b> arr[])<br/>{<br/>&nbsp;&nbsp;<b class="blue">int</b> n = arr.length;<br/>&nbsp;&nbsp;<b class="blue">for</b> (int i = <b class="green">1</b>; i &lt; n; ++i) {<br/><div class="cr sel">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">int</b> key = arr[i];</div>&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">int</b> j = i - <b class="green">1</b>;<br/><br/><div class="cr whl">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">while</b> (j &gt;= <b class="green">0</b> && arr[j] &gt; key) {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j + <b class="green">1</b>] = arr[j];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j - <b class="green">1</b>;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}</div>&nbsp;&nbsp;&nbsp;&nbsp;arr[j = <b class="green">1</b>] = key;<br/>&nbsp;&nbsp;}<br/>}';
var insertionpython = '<b class="blue">def</b> insertionSort(arr):<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> i <b class="blue">in</b> <b class="pink">range</b>(<b class="green">1</b>, <b class="pink">len</b>(arr)):<br/><br/><div class="cr sel">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key <b class="blue">=</b> arr[i]</div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j <b class="blue">=</b> j <b class="blue">-</b> <b class="green">1</b><br/><br/><div class="cr whl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">while</b> j &gt;<b class="blue">=</b> <b class="green">0</b> <b class="blue">and</b> key &lt; arr[j] :<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j <b class="blue">+</b> <b class="green">1</b>] <b class="blue">=</b> arr[j]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j <b class="blue">-=</b> <b class="green">1</b></div><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j <b class="blue">+</b> <b class="green">1</b>] <b class="blue">=</b> key<br/><br/>';
var selectionc = '<b class="blue">void</b> selectionSort(<b class="grey">int</b> arr[], <b class="grey">int</b> n)<br/>{<br/>&nbsp;&nbsp;<b class="grey">int</b> i, j, min_idx;<br/>&nbsp;&nbsp;<b class="blue">for</b> (i = 0; i &lt; n-1; i++)<br/>&nbsp;&nbsp;{<div class="sel">&nbsp;&nbsp;&nbsp;&nbsp;min_idx = i;</div><br/><div class="loop">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> (j = i+1; j &lt; n; j++)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">if</b> (arr[j] &lt; arr[min_idx])<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_idx = j;</div><br/><div class="swap">&nbsp;&nbsp;&nbsp;&nbsp;<b class="grey">int</b> tmp = arr[min_idx];<br/>&nbsp;&nbsp;&nbsp;&nbsp;arr[min_idx] = arr[i];<br/>&nbsp;&nbsp;&nbsp;&nbsp;arr[i] = tmp;</div>&nbsp;&nbsp;}<br/>}';
var selectionjava = '<b class="blue">void</b> selectionSort(<b class="blue">int</b> arr[])<br/>{<br/>&nbsp;&nbsp;<b class="blue">int</b> n = arr.length;<br/>&nbsp;&nbsp;<b class="blue">for</b> (<b class="blue">int</b> i = <b class="green">0</b>; i &lt; n-<b class="green">1</b>; i++)<br/>&nbsp;&nbsp;{<div class="sel">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">int</b> min_idx = i;</div><br/><div class="loop">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> (<b class="blue">int </b>j = i+<b class="green">1</b>; j &lt; n; j++)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">if</b> (arr[j] &lt; arr[min_idx])<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_idx = j;</div><br/><div class="swap">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">int</b> tmp = arr[min_idx];<br/>&nbsp;&nbsp;&nbsp;&nbsp;arr[min_idx] = arr[i];<br/>&nbsp;&nbsp;&nbsp;&nbsp;arr[i] = tmp;</div>&nbsp;&nbsp;}<br/>}';
var selectionpython = '<b class="blue">def</b> selectionSort(arr):<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> i <b class="blue">in</b> <b class="pink">range</b>(<b class="green">1</b>, <b class="pink">len</b>(arr)):<br/><div class="sel"><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_idx = i;</div><br/><div class="loop">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> j <b class="blue">in</b> <b class="pink">range</b>(i<b class="blue">+</b><b class="green">1</b>, <b class="pink">len</b>(arr)):<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">if</b> arr[min_idx] &gt; arr[j]:<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_idx <b class="blue">=</b> j</div><br/><div class="swap">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[i], arr[min_idx] <b class="blue">=</b> arr[min_idx], arr[i]</div><br/>';
var bubblec = '<b class="blue">void</b> bubbleSort(<b class="grey">int</b> arr[], <b class="grey">int</b> n)<br/>{<br/>&nbsp;&nbsp;<b class="grey">int</b> i, j;<br/><br/>&nbsp;&nbsp;<b class="blue">for</b> (i = 0; i &lt; n-1; i++)<br/><div class="check">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> (j = 0; j &lt; n-i-1; j++)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">if</b> (arr[j] &gt; arr[j+1])<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="grey">int</b> tmp = arr[j];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j] = arr[j+1];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j+1] = tmp;</div><br/>}';
var bubblejava = '<b class="blue">void</b> bubbleSort(<b class="blue">int</b> arr[])<br/>{<br/>&nbsp;&nbsp;<b class="blue">int</b> n = arr.length;<br/><br/>&nbsp;&nbsp;<b class="blue">for</b> (<b class="blue">int</b> i = <b class="green">0</b>; i &lt; n-<b class="green">1</b>; i++)<br/><div class="check">&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> (<b class="blue">int</b> j = <b class="green">0</b>; j &lt; n-i-<b class="green">1</b>; j++)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">if</b> (arr[j] &gt; arr[j+<b class="green">1</b>])<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">int</b> tmp = arr[j];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j] = arr[j+<b class="green">1</b>];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j+<b class="green">1</b>] = tmp;</div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}';
var bubblepython = '<b class="blue">def</b> bubbleSort(arr):<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;n <b class="blue">=</b> <b class="pink">len</b>(arr);<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> i <b class="blue">in</b> <b class="pink">range</b>(n):<br/><br/><div class="check">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">for</b> j <b class="blue">in</b> <b class="pink">range</b>(n<b class="blue">-</b>i<b class="blue">-</b><b class="green">1</b>):<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b class="blue">if</b> arr[j] &gt; arr[j<b class="blue">+</b><b class="green">1</b>] :<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[j], arr[j<b class="blue">+</b><b class="green">1</b>] <b class="blue">=</b> arr[j<b class="blue">+</b><b class="green">1</b>], arr[j]</div>';
